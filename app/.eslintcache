[{"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\index.js":"1","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\App.js":"2","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\context\\context.js":"3","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\styles.js":"4","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\context\\contextReducer.js":"5","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\index.js":"6","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\InfoCard.js":"7","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Details\\Details.js":"8","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\Main.js":"9","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Snackbar\\styles.js":"10","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\styles.js":"11","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\useTransactions.js":"12","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Details\\styles.js":"13","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\List\\List.js":"14","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\Form\\Form.js":"15","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\List\\styles.js":"16","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\constants\\categories.js":"17","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\Form\\styles.js":"18","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\utils\\formatDate.js":"19","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Snackbar\\Snackbar.js":"20"},{"size":430,"mtime":1642670074864,"results":"21","hashOfConfig":"22"},{"size":1633,"mtime":1642692015457,"results":"23","hashOfConfig":"22"},{"size":2032,"mtime":1608427806000,"results":"24","hashOfConfig":"22"},{"size":612,"mtime":1642691463665,"results":"25","hashOfConfig":"22"},{"size":583,"mtime":1608427806000,"results":"26","hashOfConfig":"22"},{"size":216,"mtime":1608427806000,"results":"27","hashOfConfig":"22"},{"size":460,"mtime":1642670931647,"results":"28","hashOfConfig":"22"},{"size":744,"mtime":1642690883606,"results":"29","hashOfConfig":"22"},{"size":1443,"mtime":1642692734257,"results":"30","hashOfConfig":"22"},{"size":206,"mtime":1608427806000,"results":"31","hashOfConfig":"22"},{"size":514,"mtime":1608427806000,"results":"32","hashOfConfig":"22"},{"size":1124,"mtime":1608427806000,"results":"33","hashOfConfig":"22"},{"size":247,"mtime":1608427806000,"results":"34","hashOfConfig":"22"},{"size":1770,"mtime":1642674453747,"results":"35","hashOfConfig":"22"},{"size":4946,"mtime":1642668367612,"results":"36","hashOfConfig":"22"},{"size":416,"mtime":1608427806000,"results":"37","hashOfConfig":"22"},{"size":1763,"mtime":1642692353909,"results":"38","hashOfConfig":"22"},{"size":247,"mtime":1608427806000,"results":"39","hashOfConfig":"22"},{"size":301,"mtime":1608427806000,"results":"40","hashOfConfig":"22"},{"size":905,"mtime":1642691297850,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"17ah59s",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\index.js",[],["85","86"],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\App.js",["87","88"],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\context\\context.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\styles.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\context\\contextReducer.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\index.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\InfoCard.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Details\\Details.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\Main.js",["89","90","91","92"],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Snackbar\\styles.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\styles.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\useTransactions.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Details\\styles.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\List\\List.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\Form\\Form.js",["93"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\constants\\categories.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\utils\\formatDate.js",["94"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","C:\\Users\\Tushar\\Desktop\\PROJECTS\\expense_tracker\\app\\src\\components\\Snackbar\\Snackbar.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":25},{"ruleId":"99","severity":1,"message":"103","line":2,"column":27,"nodeType":"101","messageId":"102","endLine":2,"endColumn":37},{"ruleId":"99","severity":1,"message":"104","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"105","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"106","line":4,"column":3,"nodeType":"101","messageId":"102","endLine":4,"endColumn":13},{"ruleId":"99","severity":1,"message":"107","line":10,"column":10,"nodeType":"101","messageId":"102","endLine":10,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":78,"column":6,"nodeType":"110","endLine":78,"endColumn":15,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":1,"nodeType":"114","endLine":11,"endColumn":3},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'CardHeader' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["117"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"120","text":"121"},[3006,3015],"[createTransaction, formData, segment]"]